name: Scheduled update

on:
  schedule:
    # Runs at minute 25 of every hour (10 minutes later than main catalogue)
    - cron: '25 * * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-:

      - name: Sync meta
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.TARGET_REPO }}
          ref: meta
          path: meta

      - name: Sync doc
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.TARGET_REPO }}
          ref: catalogue
          path: catalogue

      - name: Prepare runtime
        run: |
          rm -rf ./meta/.git
          rm -rf ./catalogue/.git
  #        cd ./scripts
  #        pip install -r requirements.txt

      - name: Generate meta
        run: |
          rm -rf ./meta/.git
          cd ./scripts
          python main.py meta
        env:
          REPO: ${{ vars.TARGET_REPO_PACK }}
          github_api_token: ${{ secrets.TOKEN_FOR_GITHUB_API }}

      - name: Deploy meta
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: ${{ vars.SELF_REPO }}
          BRANCH: meta
          FOLDER: meta
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
#          SQUASH_HISTORY: true
          SKIP_EMPTY_COMMITS: true

      - name: Deploy doc
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: ${{ vars.SELF_REPO }}
          BRANCH: catalogue
          FOLDER: catalogue
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SQUASH_HISTORY: true
          SKIP_EMPTY_COMMITS: true
